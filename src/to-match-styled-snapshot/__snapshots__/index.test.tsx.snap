// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`toMatchStyledSnapshot >> SCComponent >> component >> styled.div 1`] = `
"
{
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  box-sizing: border-box;
  position: relative;
}
"
`;

exports[`toMatchStyledSnapshot >> SCComponent >> component >> styled.li 1`] = `
"
{
  margin-left: 12px;

  position: absolute;
  padding: null;
  &:last-child {
    margin-left: 0;
  }
}
"
`;

exports[`toMatchStyledSnapshot >> SCComponent >> component >> styled.ul 1`] = `
"
{
  margin: 0;
  padding: 0;
}
"
`;

exports[`toMatchStyledSnapshot >> SCComponent >> component 1`] = `
<styled.div>
  <ClassComponent>
    <FunctionComponent />
  </ClassComponent>
  <FunctionComponent />
  <styled.ul>
    <styled.li>
      One
    </styled.li>
    <styled.li>
      Two
    </styled.li>
    <styled.li>
      Three
    </styled.li>
    <styled.li>
      Four
    </styled.li>
  </styled.ul>
</styled.div>
`;

exports[`toMatchStyledSnapshot >> SerializeComponent >> component 1`] = `
<ClassComponent
  Component={Symbol(FunctionComponent)}
  callback={[Function]}
  consumer={
    <Context.Consumer>
      <RenderProp(div) />
    </Context.Consumer>
  }
  decorator={<WithTheme(ClassComponent) />}
  element={<FunctionComponent />}
  forwardRef={<ForwardRefComponent />}
  fragment={<React.Fragment />}
  memo={<Memo(MemoComponent) />}
  portal={
    <Portal(ClassComponent)>
      <FunctionComponent />
    </Portal(ClassComponent)>
  }
  provider={
    <Context.Provider
      value=""
    />
  }
  renderProp={
    <RenderProp(FunctionComponent)
      renderProp={<RenderProp(div) />}
    />
  }
  styled={Symbol(styled.div)}
>
  <ForwardRefComponent />
  <FunctionComponent />
  <Memo(MemoComponent) />
</ClassComponent>
`;
